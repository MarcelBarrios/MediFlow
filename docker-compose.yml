version: '3.8'

services:
  # Your Flask web application
  web:
    build: . # Build from Dockerfile in current dir
    ports:
      # Map host port 5002 -> container port 10000
      - "5002:10000"
    # volumes: # Uncomment for live code reload during local dev
    #   - .:/app
    environment:
      # Use environment variables for configuration inside the container
      - FLASK_ENV=development # Optional: override for local dev features if any
      - MONGO_URI=mongodb://db:27017/mediflow_local_docker # Connect to the 'db' service
      - SECRET_KEY=my-super-secret-local-key-only # Use a distinct local key
      - PYTHONUNBUFFERED=1
    depends_on:
      - db # Ensure 'db' service starts first

  # MongoDB service for local development/testing
  db:
    image: mongo:latest # Use official Mongo image
    ports:
      # Optional: Map host port 27017 -> container port 27017 for direct DB access if needed
      - "27017:27017"
    volumes:
      # Optional: Persist DB data locally between runs
      - mongo_data:/data/db
    # environment: # Optional: Set root user/password for local DB if needed
    #   - MONGO_INITDB_ROOT_USERNAME=user
    #   - MONGO_INITDB_ROOT_PASSWORD=pass

volumes:
  # Define the named volume used by the db service
  mongo_data: